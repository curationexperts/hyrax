stages:
- build
- test
- deploy

before_script:
- export TAG=${CI_COMMIT_SHORT_SHA}
- export BRANCH=${CI_COMMIT_REF_NAME}
- export REGISTRY_HOST=${CI_REGISTRY}
- export REGISTRY_URI="/${CI_PROJECT_PATH}"

build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - sc build --service app
    - sc push --service app
    - docker tag $CI_REGISTRY_IMAGE:$TAG $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  tags:
    - local

lint:
  stage: go
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  variables:
    PRONTO_GITLAB_API_ENDPOINT: "https://gitlab.com/api/v4"
  before_script:
    - export PRONTO_GITLAB_API_PRIVATE_TOKEN=$GITLAB_API_TOKEN
  script:
    - cd /home/app/webapp && bundle exec pronto run -f gitlab
  tags:
    - docker

test:
  stage: test
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  services:
    - name: bitnami/postgresql:12.6.0
      alias: db
    - name: samvera/fcrepo4:4.7.5
      alias: fcrepo
    - name: redis:5-alpine
      alias: redis
    - name: solr:8.7
      alias: solr
    - name: selenium/standalone-chrome:3.141
      alias: chrome
  variables:
    TEST_DB: od_analytics
  script:
    - cd /home/app/webapp && bundle exec rake db:create db:schema:load spec
  tags:
    - docker
  variables:
    GIT_STRATEGY: none

review:
  stage: review
  type: deploy
  environment:
    name: $CI_COMMIT_REF_SLUG
    url: http://web.$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG.staging.$SITE_URI_BASE
    on_stop: stop_review
  only:
    - branches
  except:
    - master
  script:
    - echo "deploying"
    - sleep 10
    - echo "totally fake deploy"
 tags:
    - local

stop_review:
  stage: review
  script:

  when: manual
  environment:
    name: $CI_PROJECT_NAME-$CI_BUILD_REF_SLUG
    action: stop

staging:
  stage: staging
  type: deploy
  script:
  only:
    - master
  tags:
    - local

production:
  stage: production
  type: deploy
  script:
  when: manual
  only:
    - master
  tags:
    - local
