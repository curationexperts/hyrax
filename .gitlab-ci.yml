---
stages:
  - build
  - go

before_script:
  - export TAG=${CI_COMMIT_SHA}
  - export BRANCH=${CI_COMMIT_REF_NAME}
  - export REGISTRY_HOST=${CI_REGISTRY}
  - export REGISTRY_URI="/${CI_PROJECT_PATH}"

build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build --target hyrax-engine-dev --tag $CI_REGISTRY_IMAGE:$TAG .
    - docker push $CI_REGISTRY_IMAGE:$TAG
    - docker build --target hyrax-engine-dev-worker --tag $CI_REGISTRY_IMAGE/worker:$TAG .
    - docker push $CI_REGISTRY_IMAGE/worker:$TAG
  tags:
    - local

lint:
  stage: go
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  script:
    - bundle check || bundle
    - bundle exec rubocop
  tags:
    - docker

test:
  stage: go
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  services:
    - name: selenium/standalone-chrome:3.141
      alias: chrome
    - name: bitnami/postgresql:12.6.0
      alias: db
    - name: samvera/fcrepo4:4.7.5
      alias: fcrepo
    - name: redis:5-alpine
      alias: redis
    - name: registry.gitlab.com/notch8/rutgers-vdc/solr:latest
      alias: solr
      entrypoint: ["docker-entrypoint.sh", "solr-precreate", "hyrax-test", "/opt/config"]
  variables:
    DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: "true"
    DATABASE_URL: "postgres://postgres:postgres@db/hyku"
    FCREPO_HOST: "fcrepo"
    FCREPO_PORT: 8080
    FCREPO_REST_PATH: "rest"
    POSTGRES_DB: "hyku"
    POSTGRES_HOST: "db"
    POSTGRES_PASSWORD: "postgres"
    POSTGRES_USER: "postgres"
    REDIS_HOST: "redis"
    REDIS_PORT: 6379
    GIT_STRATEGY: none
    SOLR_HOST: solr
    SOLR_PORT: 8983
    SOLR_TEST_CORE: hyrax_test
    SOLR_TEST_URL: http://solr:8983/solr/hyrax_test
    SOLR_CORE_NAME: "hyrax_test"
    SOLR_CONFIG_DIR: "solr/config"
    SOLR_CONFIGSET: blacklight-core
    SOLR_CONFIGSET_SOURCE_PATH: solr/config
  script:
    - sleep 20m
    - cd /app/samvera/hyrax-engine && bundle exec rspec
  tags:
    - docker

ga.staging:
  stage: go
  extends:
    - .deploy
  environment:
    name: ga.staging
    url: http://hyrax-ga.samvera-community.notch8.cloud
    on_stop: ga.staging.stop
  only:
    refs:
      - main
  when: manual
  variables:
    DEPLOY_IMAGE: $CI_REGISTRY_IMAGE
    DEPLOY_TAG: $CI_COMMIT_SHORT_SHA
    WORKER_IMAGE: $CI_REGISTRY_IMAGE/worker
    HELM_EXPERIMENTAL_OCI: 1
    HELM_EXTRA_ARGS: >
      --values ops/ga-deploy.yaml
  script:
    - export KUBECONFIG=$KUBECONFIG_ADVENTIST
    - envsubst < ops/ga-deploy.tmpl.yaml > ops/ga-deploy.yaml
    - ./bin/deploy ga-test hyrax-analytics
  tags:
    - local

ga.staging.stop:
  stage: go
  extends:
    - .deploy
  environment:
    name: ga.staging
    url: http://hyrax-ga.samvera-community.notch8.cloud
    action: stop
  when: manual
  allow_failure: true
  script:
    - export KUBECONFIG=$KUBECONFIG_ADVENTIST
    - ./bin/delete ga-test hyrax-analytics
  tags:
    - local

matomo.staging:
  stage: go
  extends:
    - .deploy
  environment:
    name: matomo.staging
    url: http://hyrax-matomo.samvera-community.notch8.cloud
    on_stop: matomo.staging.stop
  only:
    refs:
      - main
  when: manual
  variables:
    DEPLOY_IMAGE: $CI_REGISTRY_IMAGE
    DEPLOY_TAG: $CI_COMMIT_SHORT_SHA
    WORKER_IMAGE: $CI_REGISTRY_IMAGE/worker
    HELM_EXPERIMENTAL_OCI: 1
    HELM_EXTRA_ARGS: >
      --values ops/matomo-deploy.yaml
  script:
    - export KUBECONFIG=$KUBECONFIG_ADVENTIST
    - envsubst < ops/matomo-deploy.tmpl.yaml > ops/matomo-deploy.yaml
    - ./bin/deploy matomo-test hyrax-analytics
  tags:
    - local

matomo.staging.stop:
  stage: go
  extends:
    - .deploy
  environment:
    name: matomo.staging
    url: http://hyrax-matomo.samvera-community.notch8.cloud
    action: stop
  when: manual
  allow_failure: true
  script:
    - export KUBECONFIG=$KUBECONFIG_ADVENTIST
    - ./bin/delete matomo-test hyrax-analytics
  tags:
    - local

.deploy:
  image: dtzar/helm-kubectl:3.5.3
